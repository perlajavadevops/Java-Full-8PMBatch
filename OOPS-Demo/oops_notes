What is Object? An object will exist either logically or pysically
OOPS: Object Oriented Progrm System. --> everthing will be maintained as object in the prog lan.
	Java, Python, .Net. Scala, Rube, Object C++....

EX: Human, Cat, Chair, Eclipse, Browsers....


they are 6 features are there in the OOPS: 

1. Object, 2. Class, 3. Inheritance, 4. Encapsulation, 5. Abstraction, 6. Polymorpshim.
 Object? An object will exist either logically or pysically. In java logically object
 
 Object is containing 3 main features(Charactersitcs) : 1. Identity, 2. State (Properites), 3. Beheviour.
 Human: 2 hands, legs, eyes, ears, nose.....
 Student: id, name, subject... 
 
 Address: house no. street no or name, pincode, state, country.....
 Beheviour: (actions) 
 
 Dhatrika Sai --->
 
 Class: blue print or template which contains.. data, contructors, methods..... blocks.. inner class...
 
 Inheritance: 
 
 Tata Cars: 
 
 Car -> TataMotors --> Nexon 
 
 Encapsulation: 
 Abstraction: 
Procedure oriented pro: C, C++


naming conventions:

class: noun
variables: alwsys small leters
methods: lower case and in --> getDetails(), displayDetails()
interface
constants:
inn

what is method? : methods means function and it will expose the behiviour an object.

they are 2 types: static method and instance method


Static Method:

static keyword and we can call static methods by using classname.stati emthod Student.getPerca()

Instance Method: the method defined without static keyword we can instance mehtod or non-static method.
non-static methods should call by using an object.

what is an object? and tell some of the objects. and create one exaple lke student
2. What is method and how to create?
3. Explain about oops?

How to create an object in java?

1. using new keyword
2. using clone method
3. newInstance()


Constructor:
What is constructor: constr means it is special mehtod in java and it will be used to create an objec and provide values for instance memeber 

2 types of constructors:
1. No parameter constructor or default const
2. Parameterized constroctur

Default Construcor: the purpose default cons is to provide defaults values for an object state (properties)
this default con will generated by java compiler only if there is no constructor defination in the class.

can we create more 1 than construcor? Yes.
Constructor overloading: more readable. 


Data types casting: 

long and float we need to specify the safix.

10L or 10l and 10.90F or 10.90f

What is constructor chaining? 
means one cons can call another con and so on.. will called as contro chaining


what is method? It is kind of function and will expose the behivour of an object
2. Static mehtods, 2. Non-static method or instance method.

What is Method Overloading? 

Method Overloading can be defined within the same class but method name shoud be same.
Adv? more readable. 
How Achive? 
1. Having no of aruguments in the method defination
2. by changing the data types of your parameters of method.

By changing the return type of mehtod is not possible. it will give the compile time.
Method overloaing can be achived by static emthods and instance methods.

1. by default java compiler will consider as integer (int ) if any values which like 1, 2, 3, 1000, 5990, 

1. by default java compiler will consider as double if any values which like 10.89, 2.90, 3.70, 1000.70, 5990.90, 
If you have more than 1 constro in the class we will called as Construcotr Overloading.
Construcotr Overloading: 1. No Parameters... 2. by changing the data type of your parater.


Create Student class and create multiple constrocts with differenct paratmers?
Create a class with default constroctrs exectue it..

Operator Overloading: (-,+, *, %, ==)
+:

10+10 ==> addition 20
20+20==> 40

"abc"+"def" ==>abcdef --> + operator will act as concatation
'a'+'c' ==> 97+99==> 

90+'c' ==> 

90+"Gangadhar" ==> con

"Gangadhar"+90+90 ==> con


90+90"Gangadhar" ==> con


this keyword:

it will refer current class object or instance

this keyword is used for only instance memebers( instance variables, non static methods, instnace block) of current class. we can not use this keyword for static memebers(static variables, static methods, static block).

Exception in thread "main" java.lang.StackOverflowError
Exception in thread "main" JVMOutofMemeory
ClasNotFoundException


Inheritance: 

Single inheritance
multi level inher
multiple inher
hieracle inher
hybrid inher

extends, implements

what is adv inher? code reusabilityu


Method Overriding?

Parent class will have method.

child class will be trying to override same method which is already present in the parent class
1. method name should same.
2. mehtod paramenters also should be same
3. method return type is should same.. 

Is java lang pass-by-value(call-by-value) or pass-by-reference(call-by-reference)?


Multiple Inheritnace: If one class is refering more than one class will called it as mulitple inheritnace
but throuugh the class this feature cant not achived reason extends keyword will support to extend single class at a time and daimond problem.


Multiple inherintance
Daimond problem
Polymorphism --> Compile and Runtime poly
Super keyword
final keyword.

------------
Abstraction: hiding implemenation and showing only functionality to the end user (users).

abstract class : partial abstraction

1. to create abstract class will use abstract keyword
2. may or may not abstract class can have abstract methods
3. abstract methods does not have body.
4. abstract class can have concrete methods(final methods) which will not overriden in the sub class.
5. abstract class also can have constr, variable, i.e means it will looks like normal class.
6. abstract methods should have implementation (body) in the subclass 
7. we can not create object for abstract class direclty i.e we have have to the sub class to create the object for abstract class.

interface: fully abstraction and multiple inheritance.
1. to create interface will use interface keyword
2. we can define abstract methods but is optional.
3. if the interface not having any abstract methods then we called it as empty interface or marker interface.
4. We can only define public static finals variables i.e Constants.
5. interface will not allow to define other than public abstract methods till java 7 version.
6. From Java 8 onwards we can define default and static methods in the interface.
7. we can not define even constr.
8. abstract methods does not have body.
9.  abstract methods should have implementation (body) in the subclass or we can also annosmous(name less) classes.
10.  we can not create object for interface direclty i.e we have have to the sub class to create the object for interface class.
11 implements keyword 

12. between interfaces we have use extends.
13. between the interfaces and classes we have to use implements.

difference abstract class and interface?
when to choose interface and abstract class?


Packages: 
1. to create package in java we have use package keyword.
2. java packages will provide adv of avoiding naming colisiou (
3. We can maintain class and interfaces separate 
4. we have to use the import keyword to import the classes....
5. we have some pre defined java packages. ex: java.lang, java.io, java.util.....
6. java.lang is defualt package in java api. no need of import java.lang package related classes and interfaces...

Encapsulation: Wrapping object data into single unit and hide the data from outside classes.

1. in the class, the data members (variables) must and should as private members
2. Should have public setter and getter methods for the variables or data memebers.

CreditCard: cvv, card number, nameon the card, card type, card limit, card pinnumber.


Adv: Hiding the data from outside of the class or securing the data from outside classes.


Student: name, id, rollnumber, college, par, current, subject, markes, 

Student{
	private 
}


Java Basics:
Data types
Types varaibles
types methods,
OOPS: objce, class, inhirients, poly, abstr, encapu, cons, meht over, method overri, this, final, super, instanceOf, operator oper (+), interface, abs,

paka, access modifiers.... upcasting, downcasting....


byte  --> Byte
short --> Short
int --> Integer
long --> Long
float --> Float
double --> Double
boolean --> Boolean
char --> Character



